// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SystemType {
  RED_STAR
  YOUNG_STAR
  UNSTABLE
  NEUTRON_STAR
  ORANGE_STAR
  BLUE_STAR
  WHITE_DWARF
  NEBULA
}

enum WaypointType {
  PLANET
  MOON
  ASTEROID
  GAS_GIANT
}

enum ContractType {
  PROCUREMENT
  TRANSPORT
  SHUTTLE
}

enum Trait {
  UNCHARTED
  MARKETPLACE
  SHIPYARD
  OUTPOST
  OCEAN
  BARREN
  FROZEN
  SPRAWLING_CITIES
}

model System {
  id              Int         @id @default(autoincrement())
  name            String      @unique
  type            SystemType
  waypoints       Waypoint[]
}

model Waypoint {
  id              Int         @id @default(autoincrement())
  name            String      @unique
  type            WaypointType      
  traits          Trait[]
  shipyard        Shipyard?
  destinations    Contract[]
  systemId        Int
  system          System      @relation(fields: [systemId], references: [id], onDelete: Cascade)  
}

model User {
  id              Int         @id @default(autoincrement())
  username        String      @unique
  password        String
  credits         Int         @default(100000)
  ships           Ship[]
  shipCount       Int         @default(0)
}

model Shipyard {
  id              Int         @id @default(autoincrement())
  name            String      @unique
  ships           Ship[]
  waypointId      Int         @unique
  waypoint        Waypoint    @relation(fields: [waypointId], references: [id], onDelete: Cascade)
}

model Ship {
  id              Int         @id @default(autoincrement())
  name            String      @unique
  owner           String?
  shipyardId      Int?
  shipyard        Shipyard?   @relation(fields: [shipyardId], references: [id])
  user            User?       @relation(fields: [owner], references: [username])
}

model Contract {
  id                  Int             @id @default(autoincrement())
  type                ContractType
  terms               ContractTerms[]
  destinationSymbol   String
  accepted            Boolean
  fulfilled           Boolean
  deadlineToAccept    String
  destination         Waypoint        @relation(fields: [destinationSymbol], references: [name])
}

model ContractTerms {
  id                  Int             @id @default(autoincrement())
  deadline            String
  payment             Int
  cargo               String
  contractId          Int
  contract            Contract        @relation(fields: [contractId], references: [id])
}